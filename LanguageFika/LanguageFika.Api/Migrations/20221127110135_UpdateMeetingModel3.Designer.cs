// <auto-generated />
using System;
using LanguageFika.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanguageFika.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221127110135_UpdateMeetingModel3")]
    partial class UpdateMeetingModel3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LanguageFika.Api.Models.Meeting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75d2a68c-6fe1-41d4-8a66-2cf672399dfa"),
                            Date = new DateTime(2022, 12, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 1",
                            Language = "Finnish",
                            Location = "Test location 1"
                        },
                        new
                        {
                            Id = new Guid("7537fa44-44aa-4e14-8c7f-a25a532710e3"),
                            Date = new DateTime(2022, 12, 11, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 2",
                            Language = "Chinese",
                            Location = "Test location 2"
                        },
                        new
                        {
                            Id = new Guid("bc53f3ab-0d12-4d57-93dc-92abd9c457c3"),
                            Date = new DateTime(2022, 12, 12, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 3",
                            Language = "Japanese",
                            Location = "Test location 3"
                        },
                        new
                        {
                            Id = new Guid("8751dd2e-cdee-4288-84bc-71fd22289642"),
                            Date = new DateTime(2022, 12, 13, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 4",
                            Language = "Portuguese",
                            Location = "Test location 4"
                        },
                        new
                        {
                            Id = new Guid("24bac4a4-1719-4f11-a224-2046ad9a607b"),
                            Date = new DateTime(2022, 12, 14, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 5",
                            Language = "Swedish",
                            Location = "Test location 5"
                        },
                        new
                        {
                            Id = new Guid("50405fc6-45e9-4938-828a-80979f4f9e57"),
                            Date = new DateTime(2022, 12, 15, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 6",
                            Language = "English",
                            Location = "Test location 6"
                        },
                        new
                        {
                            Id = new Guid("89e210ba-89ce-4bbe-81a2-97dfe5c3183e"),
                            Date = new DateTime(2022, 12, 16, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 7",
                            Language = "French",
                            Location = "Test location 7"
                        },
                        new
                        {
                            Id = new Guid("802b2420-f709-4142-b4c4-76a95e283074"),
                            Date = new DateTime(2022, 12, 17, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 8",
                            Language = "German",
                            Location = "Test location 8"
                        },
                        new
                        {
                            Id = new Guid("9b86bc9e-1ee3-49b1-869c-ee61f02d3604"),
                            Date = new DateTime(2022, 12, 18, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 9",
                            Language = "Swedish",
                            Location = "Test location 9"
                        },
                        new
                        {
                            Id = new Guid("451a93c3-ba64-4be8-8db8-e142b2a45ee0"),
                            Date = new DateTime(2022, 12, 19, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a test meeting 10",
                            Language = "Greek",
                            Location = "Test location 10"
                        });
                });

            modelBuilder.Entity("LanguageFika.Api.Models.Participant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("MeetingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("LanguageFika.Api.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageToLearn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageToTeach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LanguageFika.Api.Models.Participant", b =>
                {
                    b.HasOne("LanguageFika.Api.Models.Meeting", null)
                        .WithMany("Participants")
                        .HasForeignKey("MeetingId");
                });

            modelBuilder.Entity("LanguageFika.Api.Models.Meeting", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
